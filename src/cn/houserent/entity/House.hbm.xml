<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<!-- 替换为注解实现
<hibernate-mapping>
    <class name="cn.houserent.entity.House" table="house" lazy="false" schema="scott">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="sequence" >
            	<param name="sequence">SEQ_ID</param>
            </generator>
        </id>
        <many-to-one name="user"  class="cn.houserent.entity.User" cascade="none" fetch="join">
            <column name="user_id" />
        </many-to-one>
        <many-to-one name="type" class="cn.houserent.entity.Type" cascade="none" fetch="join">
            <column name="type_id" />
        </many-to-one>
        <many-to-one name="street" class="cn.houserent.entity.Street" cascade="none" fetch="join">
            <column name="street_id" />
        </many-to-one>
        <property name="title" type="java.lang.String">
            <column name="title" length="50" not-null="false" />
        </property>
        <property name="description" type="text" lazy="false">
            <column name="description" />
        </property>
        <property name="price" type="java.lang.Double">
            <column name="price" precision="10" scale="4" not-null="false" />
        </property>
        <property name="date" type="java.util.Date">
            <column name="pubdate" length="23" />
        </property>
        <property name="floorage" type="java.lang.Integer">
            <column name="floorage" length="10" />
        </property>
        <property name="contact" type="java.lang.String">
            <column name="contact" length="10" />
        </property>
        
    </class>
    <query name="queryHouse">
        <![CDATA[
    		from House where (title like :title) and 
    		(price between :low_price and :high_price) and 
    		(street_id like :street_id) and (type_id like :type_id) and 
    		(floorage between :small_floorage and :big_floorage)
		]]>
         
        </query>
</hibernate-mapping> -->
